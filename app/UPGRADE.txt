

# This version has changed the structure of user_org table. SQL update needed to convert the old text based role names into
# role table FK links.

set @new_admin_role_id='';
set @new_staff_role_id='';
set @jc_org_id='';
set @nesli2_org_id='';
set @shedl_org_id='';
set @sub_cons_refdata_value_id='';
set @cons_refdata_value_id='';
set @org_role_refdata_catgegory='';

select (@new_admin_role_id:=id) from role where authority='INST_ADM';
select (@new_staff_role_id:=id) from role where authority='INST_USER';
select (@jc_org_id:=org_id) from org where org_shortcode = 'JISC_Collections';
select (@nesli2_org_id:=org_id) from org where org_shortcode = 'NESLI2';
select (@shedl_org_id:=org_id) from org where org_shortcode = 'SHEDL';
select (@sub_cons_refdata_value_id:=rdv_id) from refdata_value where rdv_value = 'Subscription Consortia';
select (@cons_refdata_value_id:=rdv_id) from refdata_value where rdv_value = 'Consortium';
select (@org_role_refdata_catgegory:=rdc_id) from refdata_category where rdc_description = 'Organisational Role';

select @new_admin_role_id,@new_staff_role_id,@jc_org_id,@nesli2_org_id,@sub_cons_refdata_value_id,@cons_refdata_value_id;


update user_org set formal_role_id = @new_admin_role_id where formal_role_id is NULL and role = 'Administrator';
update user_org set formal_role_id = @new_staff_role_id where formal_role_id is NULL and role = 'Staff';


# This changes all members of NESLI2 to members of JC (Combo Type Consortium)
update combo set combo_to_org_fk = @jc_org_id where  combo_to_org_fk = @nesli2_org_id and combo_type_rv_fk = @cons_refdata_value_id;

# This changes all members of NESLI2 to members of JC (Combo Type Subscription Consortia)
update combo set combo_to_org_fk = @jc_org_id where  combo_to_org_fk = @nesli2_org_id and combo_type_rv_fk = @sub_cons_refdata_value_id;

# Make all subscription consortia org_roles currently pointing to nesli2 point at JC instead
update org_role set or_org_fk = @jc_org_id where or_org_fk=@nesli2_org_id and or_roletype_fk=@sub_cons_refdata_value_id;


# Make JC appear in list of orgs users can request membership of
update org set sector = 'Higher Education' where org_shortcode = 'JISC_Collections';
update org set sector = 'Higher Education' where org_shortcode = 'SHEDL';
update org set sector = 'Higher Education' where org_shortcode = 'WHEEL';


# Add new org_role types
insert into refdata_value(rdv_owner, rdv_value) VALUES ( @org_role_refdata_catgegory, 'Negotiator');
insert into refdata_value(rdv_owner, rdv_value) VALUES ( @org_role_refdata_catgegory, 'Licensing Consortium');



# The following section sets up the permissions on the object side of the grant (Permissions flowing along org_roles between an object such as a license and an org)

set @edit_perm='';
set @view_perm='';
set @licencee_rdv='';
set @cons_member_rdv='';
set @negotiator_rdv='';
set @licensing_consortium_rdv='';
set @subscriber_rdv='';
set @subscription_consortium_rdv='';

select (@cons_member_rdv:=rdv_id) from refdata_value, refdata_category where rdv_owner = rdc_id and rdv_value='Consortium' and rdc_description = 'Combo Type';
select (@licencee_rdv:=rdv_id) from refdata_value where rdv_value='Licensee';
select (@negotiator_rdv:=rdv_id) from refdata_value where rdv_value='Negotiator';
select (@licensing_consortium_rdv:=rdv_id) from refdata_value where rdv_value='Licensing Consortium';
select (@subscriber_rdv:=rdv_id) from refdata_value, refdata_category where rdv_owner = rdc_id and rdv_value='Subscriber' and rdc_description = 'Organisational Role';
select (@subscription_consortium_rdv:=rdv_id) from refdata_value, refdata_category where rdv_owner = rdc_id and rdv_value='Subscription Consortia' and rdc_description = 'Organisational Role';

select (@view_perm:=id) from perm where code='view';
select (@edit_perm:=id) from perm where code='edit';

select @edit_perm, @view_perm, @licencee_rdv;

delete from org_perm_share;

insert into org_perm_share(perm_id,rdv_id) values ( @edit_perm, @licencee_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @licencee_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @edit_perm, @licensing_consortium_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @licensing_consortium_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @edit_perm, @negotiator_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @negotiator_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @edit_perm, @subscriber_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @subscriber_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @edit_perm, @subscription_consortium_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @subscription_consortium_rdv );
insert into org_perm_share(perm_id,rdv_id) values ( @view_perm, @cons_member_rdv );

select r.rdv_value, p.code, p.id perm, r.rdv_id role from org_perm_share ops, perm p , refdata_value r where ops.perm_id = p.id and ops.rdv_id = r.rdv_id order by rdv_value;

delete from ftcontrol;
